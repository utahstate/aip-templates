{
  "constantName": "AIPZipCodeCollector",
  "developerSecurity": [],
  "extendsPage": null,
  "fileTimestamp": "2021-05-04T19:37:52Z",
  "modelView": {
     "components": [
        {
           "resource": "virtualDomains.ActionItemContent",
           "name": "ActionItemContent",
           "type": "resource",
           "staticData": []
        },
        {
           "resource": "virtualDomains.ActionItemStatus",
           "name": "ActionItemStatus",
           "type": "resource",
           "staticData": []
        },
        {
           "resource": "virtualDomains.ActionItemReviewStatus",
           "name": "ActionItemReviewStatus",
           "type": "resource",
           "staticData": []
        },
        {
           "resource": "virtualDomains.AIPStuStudentLocationTestJohn",
           "name": "ModelStudentLocation",
           "type": "resource",
           "staticData": []
        },
        {
           "resource": "virtualDomains.stuLovTerms",
           "name": "ModelStuLovTerms",
           "type": "resource",
           "staticData": []
        },
        {
           "readonly": false,
           "name": "popAID",
           "onLoad": "if ( typeof(window.params.actionItemId) != 'undefined') {\n    var aid = window.params.actionItemId;\n} else {\n   //temporary - for testing only.\n   window.params.actionItemId = 6;\n}\nsetTimeout( function(){ \n    $ActionItemId.$load();\n}, \n500);",
           "model": "ActionItemContent",
           "style": "hidden",
           "loadInitially": true,
           "type": "text",
           "parameters": {},
           "required": false,
           "validation": {}
        },
        {
           "readonly": false,
           "name": "ReviewStatus",
           "model": "ActionItemReviewStatus",
           "style": "hidden",
           "loadInitially": true,
           "type": "text",
           "parameters": {
              "actionitemid": "$$params.actionItemId"
           },
           "value": "gcraact_rvst_code",
           "required": false,
           "validation": {}
        },
        {
           "readonly": false,
           "name": "ActionItemId",
           "onLoad": "$ActionItemContentDetail.$load();",
           "model": "ActionItemContent",
           "style": "hidden",
           "loadInitially": false,
           "type": "text",
           "parameters": {
              "actionItemId": "$$params.actionItemId",
              "pageid": "$$params.id"
           },
           "value": "ACTION_ITEM_ID",
           "required": false,
           "validation": {}
        },
        {
           "components": [
              {
                 "documentation": "",
                 "name": "LiteralInstructions",
                 "type": "literal",
                 "value": "Having accurate information on where students are attending ensures resources to meet student needs. Most classes are held in person, as determined by the instructor and as circumstances permit. Please build your schedule accordingly and register for the section where you plan to physically attend."
              },
              {
                 "submitLabel": "Submit",
                 "components": [
                    {
                       "readonly": false,
                       "name": "TextZipCode",
                       "labelStyle": "margin-left:1em",
                       "onLoad": "",
                       "label": "Zip Code",
                       "loadInitially": true,
                       "type": "text",
                       "parameters": {},
                       "onUpdate": "",
                       "validation": {},
                       "required": true
                    }
                 ],
                 "nextButtonLabel": "Next",
                 "name": "FormZipCollector",
                 "showInitially": true,
                 "label": "",
                 "type": "form"
              }
           ],
           "name": "BlockZipCode",
           "showInitially": true,
           "label": "Please enter your zip code",
           "type": "block"
        },
        {
           "components": [
              {
                 "allowDelete": false,
                 "components": [
                    {
                       "asHtml": true,
                       "name": "ActionItemContentDisplay",
                       "onLoad": "",
                       "model": "ACTION_ITEM_CONTENT",
                       "loadInitially": true,
                       "type": "display",
                       "value": ""
                    },
                    {
                       "loadInitially": true,
                       "type": "radio",
                       "required": false,
                       "sourceParameters": {
                          "actionitemid": "$$params.actionItemId"
                       },
                       "name": "ActionItemStatusAgree",
                       "onLoad": "",
                       "model": "STATUS_RULE_ID",
                       "sourceModel": "ActionItemStatus",
                       "style": "",
                       "labelKey": "STATUS_RULE_LABEL_TEXT",
                       "valueKey": "STATUS_RULE_ID",
                       "onUpdate": "",
                       "value": ""
                    }
                 ],
                 "onError": "var errorMessage =response.data.errors? response.data.errors.errorMessage: null;if (errorMessage && errorMessage.indexOf(\"ORA-20000\") > -1) {  alert(\"An entry already exists for this virtual domain and role, cannot add a duplicate\", {type:\"error\"});} else {   alert( errorMessage?errorMessage:response.data, {type:\"error\"});}\n$(\"input[id^='pbid-ActionItemStatusAgree-radio']\").prop('disabled', false);\nwindow.params.isResponseLocked = false;",
                 "onSave": "",
                 "allowNew": false,
                 "documentation": "Displays data from virtual domain ActionItemContent",
                 "onSaveSuccess": "/*alert($.i18n.prop(\"js.notification.success\"), {type:\"success\", flash:true});*/\nwindow.params.saved=true;\n$ActionItemContentDetail.$load();",
                 "pageSize": 1,
                 "label": "",
                 "loadInitially": false,
                 "type": "detail",
                 "newRecordLabel": "",
                 "name": "ActionItemContentDetail",
                 "allowModify": true,
                 "onLoad": "var contextSelector = '[page=\"AIPZipCodeCollector\"]';\nvar context = $(contextSelector);\n\nvar styleRules = [\n  \"#pbid-TextZipCode-container { font-size: 1.10em; font-weight: bold; margin-left: 4px; margin-bottom: 1px; padding: .4em .75em; color: #4f585f;  }\",\n  \"button.primary[disabled] { background-color: #ddd !important; }\",\n  \"fieldset { border: 0 none; padding: 1em 0; }\",\n  \".zip-code-collector-submitted-message { padding: 1em .7em 0; font-size: 1.25em; }\",\n  \"div.pb-literal { line-height: 1.4; }\",\n  \"legend, .pagination-container { display: none; }\",\n].join(\" \" + contextSelector + \" \");\n\n$(\"<\" + \"style>\" + styleRules + \"<\" + \"/style>\").appendTo(context);\n\nfunction removeZipCodeField() {\n  $('input[type=\"text\"]', context).closest('form').replaceWith('<div class=\"zip-code-collector-submitted-message\">Zip Code has been submitted for this semester.</div>');\n  $('input[type=\"checkbox\"]', context).attr('disabled', 'disabled');\n}\n\nwindow.doUpdateZipCodeCollector = function(event) {\n  // this isn't working... probably due to angular ng-click hook. not sure it matters though\n  // console.log(event);\n  // if(typeof $TextZipCode == 'undefined' || $TextZipCode.search(/^\\d{5}(?:[-\\s]\\d{4})?$/) < 0) {\n  //   alert(\"Invalid Zip Code\", {type:\"error\", flash:true});\n  //   event.preventDefault();\n  //   return false;\n  // }\n\n  $ModelStudentLocation.$post({ TERM_CODE: '202120', ZIP_CODE: $TextZipCode }, null, function() {\n    alert(\"Zip Code submitted successfully.\", {type:\"success\", flash:true});\n    removeZipCodeField();\n  }, function() {\n    alert($.i18n.prop(\"js.notification.error\"), {type:\"error\", flash:true});\n  });\n};\n\n$('#pbid-ActionItemContentDetail-save-button', context).attr('onclick', 'return doUpdateZipCodeCollector(event);');\n\n// handle checkbox/save button state based on valid zipcode being entered (assumes zipcode is only textbox in the component)\n$(context).on(\n  \"change\",\n  'input[type=\"checkbox\"], input[type=\"text\"]',\n  function (event) {\n    var hasZipCode =\n      typeof $TextZipCode !== \"undefined\" &&\n      $TextZipCode.search(/^\\d{5}(?:[-\\s]\\d{4})?$/) === 0;\n\n    var isChecked = $(\"input[type='checkbox']:checked\", context).length === 1;\n\n    if (isChecked && hasZipCode) {\n      params.isResponseModified = true;\n      $(\"#pbid-ActionItemContentDetail-save-button\", context).removeAttr(\n        \"disabled\"\n      );\n    } else {\n      params.isResponseModified = false;\n      $(\"#pbid-ActionItemContentDetail-save-button\", context).attr(\n        \"disabled\",\n        \"disabled\"\n      );\n\n      if (!hasZipCode) {\n        if (event.target.type == \"checkbox\") {\n          alert(\"Invalid Zip Code\", { type: \"error\", flash: true });\n        }\n\n        $('input[type=\"checkbox\"]', context).removeAttr(\"checked\");\n      }\n    }\n  }\n);\n\n// AIP code... changes radio to textbox and manages checkbox state based on AIP item status\nsetTimeout(function () {\n  var isCheckbox = $ActionItemContentDetail.STATUS_COUNT === 1 ? true : false;\n  if (isCheckbox) {\n    // console.log(\"need checkbox\");\n    var radio = $(\"#pbid-ActionItemStatusAgree-radio-0-0\", context);\n    radio[0].type = \"checkbox\";\n\n    // remove textbox\n    if($(radio).is(':checked')) {\n      removeZipCodeField()\n    }\n  }\n  var isResponseReviewRequired = false;\n  if (typeof $ReviewStatus !== \"undefined\") {\n    isResponseReviewRequired = true;\n    if (isCheckbox) {\n      $(\"input[type='checkbox']\", context).prop({\n        disabled: isResponseReviewRequired,\n      });\n    } else {\n      $(\"input[type='radio']\", context).prop({\n        disabled: isResponseReviewRequired,\n      });\n    }\n  } else {\n    $(\"#pbid-ActionItemContentDetail-save-button\", context).click(function () {\n      var selectedResponse = isCheckbox\n        ? \"pbid-ActionItemStatusAgree-radio-0-0\"\n        : $(\"input[type='radio']:checked\", context)[0].id;\n      var responseElementId = selectedResponse.split(\n        \"pbid-ActionItemStatusAgree-radio-0-\"\n      );\n      isResponseReviewRequired =\n        data[parseInt(responseElementId[1])].STATUS_REV_REQ_IND === \"Y\"\n          ? true\n          : false;\n      if (isResponseReviewRequired) {\n        if (isCheckbox) {\n          $(\"input[type='checkbox']\", context).prop({\n            disabled: isResponseReviewRequired,\n          });\n        } else {\n          $(\"input[type='radio']\", context).prop({\n            disabled: isResponseReviewRequired,\n          });\n        }\n        $(\"#pbid-ActionItemContentDetail-save-button\", context).prop({\n          disabled: isResponseReviewRequired,\n        });\n      }\n    });\n  }\n}, 10);",
                 "model": "ActionItemContent",
                 "allowReload": false,
                 "parameters": {
                    "actionitemid": "$$params.actionItemId",
                    "pageid": "$$params.id"
                 }
              }
           ],
           "name": "PolicyBlock",
           "showInitially": true,
           "style": "",
           "label": "",
           "type": "block"
        }
     ],
     "name": "AIPZipCodeCollector",
     "label": "",
     "type": "page"
  },
  "owner": null,
  "pageRoles": [
     {
        "roleName": "ALLROLES",
        "allow": true
     }
  ]
}
